/**
 * Sets up the bindings that need to be available during development time (using
 * Next.js' standard dev server)
 *
 * Note: the function is an async one but it doesn't need to be awaited
 *
 * @param options options indicating what bindings need to be available and where/if to persist them
 */
export declare function setupDevBindings(options: DevBindingsOptions): Promise<void>;
export type DevBindingsOptions = {
    /**
     * Record mapping binding names to text bindings.
     */
    textBindings?: Record<string, string>;
    /**
     * Record mapping binding names to Worker/Service names.
     *
     * Note: In order to use such bindings you need to locally run the Workers you want to bind to with `wrangler dev`.
     */
    services?: Record<string, string>;
    /**
     * Record mapping binding names to KV namespace IDs.
     * If a `string[]` of binding names is specified, the binding name and KV namespace ID are assumed to be the same.
     */
    kvNamespaces?: string[] | Record<string, string>;
    /**
     * Record mapping binding name to Durable Object class designators, where the designator is an object with the following fields:
     *  - `className`: name of a DurableObject class
     *  - `scriptName`: name of the Worker exporting the class
     *
     * Note: In order to use such bindings you need to locally run the Workers exporting any durable object class used with `wrangler dev`.
     */
    durableObjects?: Record<string, {
        scriptName: string;
        className: string;
    }>;
    /**
     * Record mapping binding names to R2 bucket names to inject as R2Bucket.
     * If a `string[]` of binding names is specified, the binding name and bucket name are assumed to be the same.
     */
    r2Buckets?: string[] | Record<string, string>;
    /**
     * Record mapping binding name to D1 database IDs.
     * If a `string[]` of binding names is specified, the binding name and database ID are assumed to be the same.
     */
    d1Databases?: string[] | Record<string, string>;
    /**
     * Indicates where to persist the bindings data, it defaults to the same location used by wrangler v3: `.wrangler/state/v3`
     * (so that the same data can be easily used by both the next dev server and `wrangler pages dev`).
     * If `false` is specified no data is persisted on the filesystem.
     */
    persist?: false | string;
};
